name: Test Git Ref

on:
  workflow_dispatch:
    inputs:
      version:
        required: false
        type: string
        description: |
          Version of the app to release.
          By default this value will be used also as a git reference to checkout.
          If you want to release from a different branch or tag, you can provide it in the ref input.
      ref:
        required: false
        type: string
        description: |
          Git reference to checkout the code and use it for release.
          If not provided, the version will be used as a ref.
          It can be either a branch name, tag name or commit SHA (long version).
#  push:
#    branches:
#      - main
#      - meta
#    tags:
#      - 'v*'

run-name: "ref = ${{ inputs.ref }} | refname = ${{ github.ref_name }}"

jobs:
  resolve-config:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.git-ref.outputs.value }}
      refType: ${{ steps.git-ref.outputs.type }}
      refSha: ${{ steps.git-ref.outputs.sha }}
      version: ${{ steps.version.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version || github.ref_name }}
      - name: Resolve ref type
        # Resolves the git reference value and type of it (tag, branch, sha)
        id: git-ref
        run: |
          value="${{ inputs.version || github.ref_name }}"
          echo "value=$value" > $GITHUB_OUTPUT
          
          echo "::group::Type resolution"
          # Strip refs/heads/, refs/tags/, or refs/ prefix to get a simple ref name
          if [[ "$value" == refs/heads/* ]]; then
          ref_name="${value#refs/heads/}"
          ref_type="branch"
          elif [[ "$value" == refs/tags/* ]]; then
          ref_name="${value#refs/tags/}"
          ref_type="tag"
          elif [[ "$value" == refs/* ]]; then
          ref_name="${value#refs/}"
          ref_type="unknown"
          else
          ref_name="$value"
          ref_type="unknown"
          fi
          
          echo "possible type=$ref_type"
          
          # Determine if the ref is a tag, branch, or commit SHA
          if git show-ref --verify --quiet "refs/heads/$ref_name"; then
          ref_type="branch"
          elif git show-ref --verify --quiet "refs/tags/$ref_name"; then
          ref_type="tag"
          elif git cat-file -e "$ref_name^{commit}" 2>/dev/null; then
          ref_type="commit"
          else
          ref_type="unknown"
          fi
          
          echo "confirmed type=$ref_type"
          echo "::endgroup::"
          if "$ref_type" == "unknown"; then
          echo "Cannot determine the type of ref: $value"
          exit 1
          fi
          
          echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "type=$ref_type" >> $GITHUB_OUTPUT
          echo "::group::Outputs"
          cat $GITHUB_OUTPUT
          echo "::endgroup::"

