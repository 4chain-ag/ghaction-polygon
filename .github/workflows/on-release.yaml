name: On Release
permissions:
  contents: write

on:
  workflow_call:
    inputs:
      os:
        description: "Comma separated list of OS for which the binary should be built"
        default: 'linux,darwin'
        required: false
        type: string
      go_version:
        required: false
        type: string
        default: '1.21'
        description: "Version of Go which should be used to perform the checks"
      cgo_enabled:
        required: false
        type: boolean
        default: false
        description: "Should set the CGO_ENABLED env and the compilers"


env:
  OS_MAPPING: | 
    {
      'darwin': 'macos-latest',
      'linux': 'ubuntu-latest'
    }
    

jobs:
  resolve-config:
    runs-on: ubuntu-latest
    outputs:
      os: ${{ steps.os.outputs.result }}
      workflow: ${{ steps.workflow.outputs.result }}
    steps:
      - id: os
        uses: actions/github-script@v6
        with:
          script: |
            const systems = '${{ inputs.os }}'
            const osToImage = ${{ env.OS_MAPPING }}
            
            return systems.split(',').map(os => osToImage[os]);
      - id: workflow
        uses: actions/github-script@v6
        with:
          script: |
            const workflowRef = '${{github.workflow_ref}}'
            const parts = workflowRef.split('@')[0].split('/')
            return {
              repository: `${{github.server_url}}/${parts[0]}/${parts[1]}`,
              owner: parts[0],
              repo_name: parts[1],
              file: parts.slice(2).join('/')
            }

  build:
    needs: [resolve-config]
    strategy:
      matrix:
        os: ${{ fromJSON(needs.resolve-config.outputs.os) }}
    runs-on: ${{ matrix.os }}
    env:
      CGO_ENABLED: ${{ inputs.cgo_enabled && '1' || '0' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{inputs.go_version}}


